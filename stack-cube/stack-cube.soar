# Propose search cubes until Cozmo finds two cubes
sp {propose-search-cubes
    (state <s> ^name stack-cube
               ^cube-count < 2)
-->
    (<s> ^operator <o> + <)
    (<o> ^name search-cube)
    (write |initialize turning for searching cube|)
}


# propose stack cube if Cozmo remebers seeing two cubes
sp {propose-stack-cube
    (state <s> ^name stack-cube
               ^cube <c1>
               ^cube {<> <c1> <c2>}
              -^top
              -^bottom)
    (<c1> ^object-id <c1-oid>
          ^cube-id <c1-cid>)
    (<c2> ^object-id <c2-oid>
          ^cube-id {< <c1-cid> <c2-cid>})
-->
    (<s> ^operator <o> + =)
    (<o> ^name stack-order
         ^top <c1>
         ^bottom <c2>)
    (<c1> ^cid <c1-cid>
          ^oid <c1-oid>)
    (<c2> ^cid <c2-cid>
          ^oid <c2-oid>)
    (write |propose stack | <c1-cid> | on top of | <c2-cid>)
}

sp {apply-stack-cube
    (state <s> ^operator <o>)
    (<o> ^name stack-order
         ^top <c1>
         ^bottom <c2>)
    (<c1> ^cid <c1-cid>
          ^oid <c1-oid>)
    (<c2> ^cid <c2-cid>
          ^oid <c2-oid>)
--> 
    (<s> ^top <c1>
         ^bottom <c2>)
    (write |stacking order set|)
}

# pick up top cube
sp {propose-pickup-top-cube
    (state <s> ^name stack-cube
               ^io.input-link.carrying-block 0
               ^top.object-id <oid>)
-->
    (<s> ^operator <o> +)
    (<o> ^name pickup-top
         ^actions.pick-up-object.object-id <oid>)
    (write |pick up top cube |)
}

# turn to bottom cube
sp {propose-turn-towards-bottom-cube
    (state <s> ^name stack-cube
               ^io.input-link.carrying-block 1
               ^bottom.cube-id <cid>
               ^cube <c>)
    (<c> ^cube-id <cid>
         ^heading <h>
        -^heading { > -5 < 5 } )
-->
    # TODO: add elaboration to calculate pose
    (<s> ^operator <o> +)
    (<o> ^name turn-to-bottom
         ^actions.turn-in-place <tip>)
    (<tip> ^angle <h>
           ^speed 30)
    (write |turning | <h> | degrees toward bottom cube | <cid>)
}

# TODO: drive to bottom cube if too far away

# drop top cube on bottom cube
sp {propose-place-top-cube
    (state <s> ^name stack-cube
               ^io.input-link.carrying-block 1
               ^bottom.object-id <oid>
               ^cube <c>)
    (<c> ^object-id <oid>
         ^heading { > -5 < 5 } )
-->
    (<s> ^operator <o> +)
    (<o> ^name place-cube
         ^actions.place-on-object.object-id <oid>)
    (write |place top block on bottom one|)
}


# Propose drive home after finished stacking
sp{propose-go-home-turn
    (state <s> ^name stack-cube
               ^io.output-link.place-on-object.status complete)
-->
    (write |debug: propose go home|)
    (<s> ^operator <o> +)
    (<o> ^name go-home)      
}

# Apply go home by driving back to starting pose and put down block
sp {propose-turn-home
    (state <s> ^name go-home
               ^superstate.heading <h>
              -^superstate.heading { > -5 < 5 } )
-->
    (write (crlf) |debug: apply turning towards home, heading | <h>)
    (<s> ^operator <o> +)
    (<o> ^name turn-home
         ^actions <act>)
    (<act> ^turn-in-place <t>)
    (<t> ^angle <h>
         ^speed 45)
}

sp {propose-drive-home
    (state <s> ^name go-home
    # check heading 
               ^superstate.heading { > -5 < 5 }
               ^superstate.range <r>)
-->
    (write (crlf) |debug: propose driving towards home|)
    (<s> ^operator <o> +)
    (<o> ^name drive
         ^actions <act>)
    (<act> ^drive-forward <d>)
    (<d> ^distance ( - <r> 55) 
         ^speed 30)
}

# Turn again to face starting pose
sp {propose-drop-block
    (state <s> ^operator.name go-home
               ^superstate.heading { > -5 < 5 }
               ^superstate.range < 55
               ^superstate.starting-location.rot <sr>
               ^superstate.io.input-link.pose.rot <pr>)
-->
    (write (crlf) |debug: propose drop block action|)
    (<s> ^operator <o> +)
    (<o> ^name turn-to-origin
         ^actions <act>)
    (<act> ^turn-in-place <t>)
    (<t> ^angle (- <pr> <sr>)
         ^speed 45)
}
